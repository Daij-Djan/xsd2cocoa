/*
 XSDattribute.h
 The implementation of properties and methods for the XSDattribute object.
 Generated by SudzC.com
 */
#import "XSDattribute.h"
#import "XSSchemaNode.h"
#import "XSDlocalSimpleType.h"
#import "XSDschema.h"

@implementation XSDattribute

@synthesize name = _name;
@synthesize simpleType = _simpleType;
@synthesize type = _type;
@synthesize use = _use;
@synthesize defaultValue = _defaultValue;
@synthesize fixed = _fixed;
@synthesize form = _form;
@synthesize schema = _schema;

- (id) init
{
    if(self = [super init]) {
        self.name = nil;
        self.simpleType = nil; 
        self.type = nil; 
        self.defaultValue = nil; 
        self.fixed = nil; 
        self.form = nil; 
        
    }
    return self;
}


- (id) initWithNode: (NSXMLElement*) node schema: (XSDschema*) schema{
    if(self = [super initWithNode: node]) {
        self.schema = schema;
        self.name = [XSSchemaNode node: node stringAttribute:  @"name"];
        self.simpleType = [XSSchemaNode node: node stringAttribute:  @"simpleType"];
        self.type = [XSSchemaNode node: node stringAttribute:  @"type"];
        self.use = [XSSchemaNode node: node stringAttribute:  @"use"];
        self.defaultValue = [XSSchemaNode node: node stringAttribute: @"default"];
        self.fixed = [XSSchemaNode node: node stringAttribute:  @"fixed"];
        self.form = [XSSchemaNode node: node stringAttribute: @"form"];
    }
    return self;
}


- (NSString*) objcType {
    return [[self.schema typeForName: self.type] targetClassName];
}

- (NSString*) readTemplate {
    return [[self.schema typeForName: self.type] readCodeForAttribute: self];
}

- (NSString*) variableName {
    return [XSDschema variableNameFromName:self.name multiple:NO];
}

@end
